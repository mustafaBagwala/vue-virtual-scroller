{"version":3,"file":"vue-virtual-scroller.min.js","sources":["../src/config.js","../../../node_modules/scrollparent/scrollparent.js","../../../node_modules/vue-observe-visibility/dist/vue-observe-visibility.esm.js","../../../node_modules/vue-resize/dist/vue-resize.esm.js","../src/utils.js","../src/components/common.js","../src/components/RecycleScroller.vue","../src/components/DynamicScroller.vue","../src/components/DynamicScrollerItem.vue","../src/index.js","../src/mixins/IdState.js"],"sourcesContent":["export default {\r\n  itemsLimit: 1000,\r\n}\r\n","(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Scrollparent = factory();\n  }\n}(this, function () {\n  var regex = /(auto|scroll)/;\n\n  var parents = function (node, ps) {\n    if (node.parentNode === null) { return ps; }\n\n    return parents(node.parentNode, ps.concat([node]));\n  };\n\n  var style = function (node, prop) {\n    return getComputedStyle(node, null).getPropertyValue(prop);\n  };\n\n  var overflow = function (node) {\n    return style(node, \"overflow\") + style(node, \"overflow-y\") + style(node, \"overflow-x\");\n  };\n\n  var scroll = function (node) {\n   return regex.test(overflow(node));\n  };\n\n  var scrollParent = function (node) {\n    if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n      return ;\n    }\n\n    var ps = parents(node.parentNode, []);\n\n    for (var i = 0; i < ps.length; i += 1) {\n      if (scroll(ps[i])) {\n        return ps[i];\n      }\n    }\n\n    return document.scrollingElement || document.documentElement;\n  };\n\n  return scrollParent;\n}));\n","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction processOptions(value) {\n  var options;\n\n  if (typeof value === 'function') {\n    // Simple options (callback-only)\n    options = {\n      callback: value\n    };\n  } else {\n    // Options object\n    options = value;\n  }\n\n  return options;\n}\nfunction throttle(callback, delay) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var timeout;\n  var lastState;\n  var currentArgs;\n\n  var throttled = function throttled(state) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    currentArgs = args;\n    if (timeout && state === lastState) return;\n    var leading = options.leading;\n\n    if (typeof leading === 'function') {\n      leading = leading(state, lastState);\n    }\n\n    if ((!timeout || state !== lastState) && leading) {\n      callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));\n    }\n\n    lastState = state;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));\n      timeout = 0;\n    }, delay);\n  };\n\n  throttled._clear = function () {\n    clearTimeout(timeout);\n    timeout = null;\n  };\n\n  return throttled;\n}\nfunction deepEqual(val1, val2) {\n  if (val1 === val2) return true;\n\n  if (_typeof(val1) === 'object') {\n    for (var key in val1) {\n      if (!deepEqual(val1[key], val2[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nvar VisibilityState =\n/*#__PURE__*/\nfunction () {\n  function VisibilityState(el, options, vnode) {\n    _classCallCheck(this, VisibilityState);\n\n    this.el = el;\n    this.observer = null;\n    this.frozen = false;\n    this.createObserver(options, vnode);\n  }\n\n  _createClass(VisibilityState, [{\n    key: \"createObserver\",\n    value: function createObserver(options, vnode) {\n      var _this = this;\n\n      if (this.observer) {\n        this.destroyObserver();\n      }\n\n      if (this.frozen) return;\n      this.options = processOptions(options);\n\n      this.callback = function (result, entry) {\n        _this.options.callback(result, entry);\n\n        if (result && _this.options.once) {\n          _this.frozen = true;\n\n          _this.destroyObserver();\n        }\n      }; // Throttle\n\n\n      if (this.callback && this.options.throttle) {\n        var _ref = this.options.throttleOptions || {},\n            _leading = _ref.leading;\n\n        this.callback = throttle(this.callback, this.options.throttle, {\n          leading: function leading(state) {\n            return _leading === 'both' || _leading === 'visible' && state || _leading === 'hidden' && !state;\n          }\n        });\n      }\n\n      this.oldResult = undefined;\n      this.observer = new IntersectionObserver(function (entries) {\n        var entry = entries[0];\n\n        if (entries.length > 1) {\n          var intersectingEntry = entries.find(function (e) {\n            return e.isIntersecting;\n          });\n\n          if (intersectingEntry) {\n            entry = intersectingEntry;\n          }\n        }\n\n        if (_this.callback) {\n          // Use isIntersecting if possible because browsers can report isIntersecting as true, but intersectionRatio as 0, when something very slowly enters the viewport.\n          var result = entry.isIntersecting && entry.intersectionRatio >= _this.threshold;\n          if (result === _this.oldResult) return;\n          _this.oldResult = result;\n\n          _this.callback(result, entry);\n        }\n      }, this.options.intersection); // Wait for the element to be in document\n\n      vnode.context.$nextTick(function () {\n        if (_this.observer) {\n          _this.observer.observe(_this.el);\n        }\n      });\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.observer) {\n        this.observer.disconnect();\n        this.observer = null;\n      } // Cancel throttled call\n\n\n      if (this.callback && this.callback._clear) {\n        this.callback._clear();\n\n        this.callback = null;\n      }\n    }\n  }, {\n    key: \"threshold\",\n    get: function get() {\n      return this.options.intersection && this.options.intersection.threshold || 0;\n    }\n  }]);\n\n  return VisibilityState;\n}();\n\nfunction bind(el, _ref2, vnode) {\n  var value = _ref2.value;\n  if (!value) return;\n\n  if (typeof IntersectionObserver === 'undefined') {\n    console.warn('[vue-observe-visibility] IntersectionObserver API is not available in your browser. Please install this polyfill: https://github.com/w3c/IntersectionObserver/tree/master/polyfill');\n  } else {\n    var state = new VisibilityState(el, value, vnode);\n    el._vue_visibilityState = state;\n  }\n}\n\nfunction update(el, _ref3, vnode) {\n  var value = _ref3.value,\n      oldValue = _ref3.oldValue;\n  if (deepEqual(value, oldValue)) return;\n  var state = el._vue_visibilityState;\n\n  if (!value) {\n    unbind(el);\n    return;\n  }\n\n  if (state) {\n    state.createObserver(value, vnode);\n  } else {\n    bind(el, {\n      value: value\n    }, vnode);\n  }\n}\n\nfunction unbind(el) {\n  var state = el._vue_visibilityState;\n\n  if (state) {\n    state.destroyObserver();\n    delete el._vue_visibilityState;\n  }\n}\n\nvar ObserveVisibility = {\n  bind: bind,\n  update: update,\n  unbind: unbind\n};\n\nfunction install(Vue) {\n  Vue.directive('observe-visibility', ObserveVisibility);\n  /* -- Add more components here -- */\n}\n/* -- Plugin definition & Auto-install -- */\n\n/* You shouldn't have to modify the code below */\n// Plugin\n\nvar plugin = {\n  // eslint-disable-next-line no-undef\n  version: \"0.4.6\",\n  install: install\n};\n\nvar GlobalVue = null;\n\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue;\n}\n\nif (GlobalVue) {\n  GlobalVue.use(plugin);\n}\n\nexport default plugin;\nexport { ObserveVisibility, install };\n","function getInternetExplorerVersion() {\n\tvar ua = window.navigator.userAgent;\n\n\tvar msie = ua.indexOf('MSIE ');\n\tif (msie > 0) {\n\t\t// IE 10 or older => return version number\n\t\treturn parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n\t}\n\n\tvar trident = ua.indexOf('Trident/');\n\tif (trident > 0) {\n\t\t// IE 11 => return version number\n\t\tvar rv = ua.indexOf('rv:');\n\t\treturn parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n\t}\n\n\tvar edge = ua.indexOf('Edge/');\n\tif (edge > 0) {\n\t\t// Edge (IE 12+) => return version number\n\t\treturn parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n\t}\n\n\t// other browser\n\treturn -1;\n}\n\nvar isIE = void 0;\n\nfunction initCompat() {\n\tif (!initCompat.init) {\n\t\tinitCompat.init = true;\n\t\tisIE = getInternetExplorerVersion() !== -1;\n\t}\n}\n\nvar ResizeObserver = { render: function render() {\n\t\tvar _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"resize-observer\", attrs: { \"tabindex\": \"-1\" } });\n\t}, staticRenderFns: [], _scopeId: 'data-v-b329ee4c',\n\tname: 'resize-observer',\n\n\tmethods: {\n\t\tcompareAndNotify: function compareAndNotify() {\n\t\t\tif (this._w !== this.$el.offsetWidth || this._h !== this.$el.offsetHeight) {\n\t\t\t\tthis._w = this.$el.offsetWidth;\n\t\t\t\tthis._h = this.$el.offsetHeight;\n\t\t\t\tthis.$emit('notify');\n\t\t\t}\n\t\t},\n\t\taddResizeHandlers: function addResizeHandlers() {\n\t\t\tthis._resizeObject.contentDocument.defaultView.addEventListener('resize', this.compareAndNotify);\n\t\t\tthis.compareAndNotify();\n\t\t},\n\t\tremoveResizeHandlers: function removeResizeHandlers() {\n\t\t\tif (this._resizeObject && this._resizeObject.onload) {\n\t\t\t\tif (!isIE && this._resizeObject.contentDocument) {\n\t\t\t\t\tthis._resizeObject.contentDocument.defaultView.removeEventListener('resize', this.compareAndNotify);\n\t\t\t\t}\n\t\t\t\tdelete this._resizeObject.onload;\n\t\t\t}\n\t\t}\n\t},\n\n\tmounted: function mounted() {\n\t\tvar _this = this;\n\n\t\tinitCompat();\n\t\tthis.$nextTick(function () {\n\t\t\t_this._w = _this.$el.offsetWidth;\n\t\t\t_this._h = _this.$el.offsetHeight;\n\t\t});\n\t\tvar object = document.createElement('object');\n\t\tthis._resizeObject = object;\n\t\tobject.setAttribute('aria-hidden', 'true');\n\t\tobject.setAttribute('tabindex', -1);\n\t\tobject.onload = this.addResizeHandlers;\n\t\tobject.type = 'text/html';\n\t\tif (isIE) {\n\t\t\tthis.$el.appendChild(object);\n\t\t}\n\t\tobject.data = 'about:blank';\n\t\tif (!isIE) {\n\t\t\tthis.$el.appendChild(object);\n\t\t}\n\t},\n\tbeforeDestroy: function beforeDestroy() {\n\t\tthis.removeResizeHandlers();\n\t}\n};\n\n// Install the components\nfunction install(Vue) {\n\tVue.component('resize-observer', ResizeObserver);\n\tVue.component('ResizeObserver', ResizeObserver);\n}\n\n// Plugin\nvar plugin = {\n\t// eslint-disable-next-line no-undef\n\tversion: \"0.4.5\",\n\tinstall: install\n};\n\n// Auto-install\nvar GlobalVue = null;\nif (typeof window !== 'undefined') {\n\tGlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n\tGlobalVue = global.Vue;\n}\nif (GlobalVue) {\n\tGlobalVue.use(plugin);\n}\n\nexport { install, ResizeObserver };\nexport default plugin;\n","export let supportsPassive = false\r\n\r\nif (typeof window !== 'undefined') {\r\n  supportsPassive = false\r\n  try {\r\n    var opts = Object.defineProperty({}, 'passive', {\r\n      get () {\r\n        supportsPassive = true\r\n      },\r\n    })\r\n    window.addEventListener('test', null, opts)\r\n  } catch (e) {}\r\n}\r\n","export const props = {\r\n  items: {\r\n    type: Array,\r\n    required: true,\r\n  },\r\n\r\n  keyField: {\r\n    type: String,\r\n    default: 'id',\r\n  },\r\n\r\n  direction: {\r\n    type: String,\r\n    default: 'vertical',\r\n    validator: (value) => ['vertical', 'horizontal'].includes(value),\r\n  },\r\n\r\n  listTag: {\r\n    type: String,\r\n    default: 'div',\r\n  },\r\n\r\n  itemTag: {\r\n    type: String,\r\n    default: 'div',\r\n  },\r\n}\r\n\r\nexport function simpleArray () {\r\n  return this.items.length && typeof this.items[0] !== 'object'\r\n}\r\n","<template>\r\n  <div\r\n    v-observe-visibility=\"handleVisibilityChange\"\r\n    class=\"vue-recycle-scroller\"\r\n    :class=\"{\r\n      ready,\r\n      'page-mode': pageMode,\r\n      [`direction-${direction}`]: true,\r\n    }\"\r\n    @scroll.passive=\"handleScroll\"\r\n  >\r\n    <div\r\n      v-if=\"$slots.before\"\r\n      ref=\"before\"\r\n      class=\"vue-recycle-scroller__slot\"\r\n    >\r\n      <slot\r\n        name=\"before\"\r\n      />\r\n    </div>\r\n\r\n    <component\r\n      :is=\"listTag\"\r\n      ref=\"wrapper\"\r\n      :style=\"{ [direction === 'vertical' ? 'minHeight' : 'minWidth']: totalSize + 'px' }\"\r\n      class=\"vue-recycle-scroller__item-wrapper\"\r\n      :class=\"listClass\"\r\n    >\r\n      <component\r\n        :is=\"itemTag\"\r\n        v-for=\"view of pool\"\r\n        :key=\"view.nr.id\"\r\n        :style=\"ready\r\n          ? [\r\n            (disableTransform\r\n              ? { [direction === 'vertical' ? 'top' : 'left'] : `${view.position}px`, willChange: 'unset' }\r\n              : { transform: `translate${direction === 'vertical' ? 'Y' : 'X'}(${view.position}px) translate${direction === 'vertical' ? 'X' : 'Y'}(${view.offset}px)` }),\r\n            {\r\n              width: gridItems ? `${direction === 'vertical' ? itemSecondarySize || itemSize : itemSize}px` : undefined,\r\n              height: gridItems ? `${direction === 'horizontal' ? itemSecondarySize || itemSize : itemSize}px` : undefined,\r\n            }\r\n          ]\r\n          : null\"\r\n        class=\"vue-recycle-scroller__item-view\"\r\n        :class=\"[\r\n          itemClass,\r\n          {\r\n            hover: !skipHover && hoverKey === view.nr.key\r\n          },\r\n        ]\"\r\n        v-on=\"skipHover ? {} : {\r\n          mouseenter: () => { hoverKey = view.nr.key },\r\n          mouseleave: () => { hoverKey = null },\r\n        }\"\r\n      >\r\n        <slot\r\n          :item=\"view.item\"\r\n          :index=\"view.nr.index\"\r\n          :active=\"view.nr.used\"\r\n        />\r\n      </component>\r\n\r\n      <slot\r\n        name=\"empty\"\r\n      />\r\n    </component>\r\n\r\n    <div\r\n      v-if=\"$slots.after\"\r\n      ref=\"after\"\r\n      class=\"vue-recycle-scroller__slot\"\r\n    >\r\n      <slot\r\n        name=\"after\"\r\n      />\r\n    </div>\r\n\r\n    <ResizeObserver @notify=\"handleResize\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ScrollParent from 'scrollparent'\r\nimport { ObserveVisibility } from 'vue-observe-visibility'\r\nimport { ResizeObserver } from 'vue-resize'\r\nimport config from '../config'\r\nimport { supportsPassive } from '../utils'\r\nimport { props, simpleArray } from './common'\r\n\r\nlet uid = 0\r\n\r\nexport default {\r\n  name: 'RecycleScroller',\r\n\r\n  components: {\r\n    ResizeObserver,\r\n  },\r\n\r\n  directives: {\r\n    ObserveVisibility,\r\n  },\r\n\r\n  props: {\r\n    ...props,\r\n    disableTransform: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    itemSize: {\r\n      type: Number,\r\n      default: null,\r\n    },\r\n\r\n    gridItems: {\r\n      type: Number,\r\n      default: undefined,\r\n    },\r\n\r\n    itemSecondarySize: {\r\n      type: Number,\r\n      default: undefined,\r\n    },\r\n\r\n    minItemSize: {\r\n      type: [Number, String],\r\n      default: null,\r\n    },\r\n\r\n    sizeField: {\r\n      type: String,\r\n      default: 'size',\r\n    },\r\n\r\n    typeField: {\r\n      type: String,\r\n      default: 'type',\r\n    },\r\n\r\n    buffer: {\r\n      type: Number,\r\n      default: 200,\r\n    },\r\n\r\n    pageMode: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    prerender: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    emitUpdate: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    skipHover: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    listTag: {\r\n      type: String,\r\n      default: 'div',\r\n    },\r\n\r\n    itemTag: {\r\n      type: String,\r\n      default: 'div',\r\n    },\r\n\r\n    listClass: {\r\n      type: [String, Object, Array],\r\n      default: '',\r\n    },\r\n\r\n    itemClass: {\r\n      type: [String, Object, Array],\r\n      default: '',\r\n    },\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      pool: [],\r\n      totalSize: 0,\r\n      ready: false,\r\n      hoverKey: null,\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    sizes () {\r\n      if (this.itemSize === null) {\r\n        const sizes = {\r\n          '-1': { accumulator: 0 },\r\n        }\r\n        const items = this.items\r\n        const field = this.sizeField\r\n        const minItemSize = this.minItemSize\r\n        let computedMinSize = 10000\r\n        let accumulator = 0\r\n        let current\r\n        for (let i = 0, l = items.length; i < l; i++) {\r\n          current = items[i][field] || minItemSize\r\n          if (current < computedMinSize) {\r\n            computedMinSize = current\r\n          }\r\n          accumulator += current\r\n          sizes[i] = { accumulator, size: current }\r\n        }\r\n        // eslint-disable-next-line\r\n        this.$_computedMinItemSize = computedMinSize\r\n        return sizes\r\n      }\r\n      return []\r\n    },\r\n\r\n    simpleArray,\r\n  },\r\n\r\n  watch: {\r\n    items () {\r\n      this.updateVisibleItems(true)\r\n    },\r\n\r\n    pageMode () {\r\n      this.applyPageMode()\r\n      this.updateVisibleItems(false)\r\n    },\r\n\r\n    sizes: {\r\n      handler () {\r\n        this.updateVisibleItems(false)\r\n      },\r\n      deep: true,\r\n    },\r\n\r\n    gridItems () {\r\n      this.updateVisibleItems(true)\r\n    },\r\n\r\n    itemSecondarySize () {\r\n      this.updateVisibleItems(true)\r\n    },\r\n  },\r\n\r\n  created () {\r\n    this.$_startIndex = 0\r\n    this.$_endIndex = 0\r\n    this.$_views = new Map()\r\n    this.$_unusedViews = new Map()\r\n    this.$_scrollDirty = false\r\n    this.$_lastUpdateScrollPosition = 0\r\n\r\n    // In SSR mode, we also prerender the same number of item for the first render\r\n    // to avoir mismatch between server and client templates\r\n    if (this.prerender) {\r\n      this.$_prerender = true\r\n      this.updateVisibleItems(false)\r\n    }\r\n\r\n    if (this.gridItems && !this.itemSize) {\r\n      console.error('[vue-recycle-scroller] You must provide an itemSize when using gridItems')\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    this.applyPageMode()\r\n    this.$nextTick(() => {\r\n      // In SSR mode, render the real number of visible items\r\n      this.$_prerender = false\r\n      this.updateVisibleItems(true)\r\n      this.ready = true\r\n    })\r\n  },\r\n\r\n  activated () {\r\n    const lastPosition = this.$_lastUpdateScrollPosition\r\n    if (typeof lastPosition === 'number') {\r\n      this.$nextTick(() => {\r\n        this.scrollToPosition(lastPosition)\r\n      })\r\n    }\r\n  },\r\n\r\n  beforeDestroy () {\r\n    this.removeListeners()\r\n  },\r\n\r\n  methods: {\r\n    addView (pool, index, item, key, type) {\r\n      const view = {\r\n        item,\r\n        position: 0,\r\n      }\r\n      const nonReactive = {\r\n        id: uid++,\r\n        index,\r\n        used: true,\r\n        key,\r\n        type,\r\n      }\r\n      Object.defineProperty(view, 'nr', {\r\n        configurable: false,\r\n        value: nonReactive,\r\n      })\r\n      pool.push(view)\r\n      return view\r\n    },\r\n\r\n    unuseView (view, fake = false) {\r\n      const unusedViews = this.$_unusedViews\r\n      const type = view.nr.type\r\n      let unusedPool = unusedViews.get(type)\r\n      if (!unusedPool) {\r\n        unusedPool = []\r\n        unusedViews.set(type, unusedPool)\r\n      }\r\n      unusedPool.push(view)\r\n      if (!fake) {\r\n        view.nr.used = false\r\n        view.position = -9999\r\n        this.$_views.delete(view.nr.key)\r\n      }\r\n    },\r\n\r\n    handleResize () {\r\n      this.$emit('resize')\r\n      if (this.ready) this.updateVisibleItems(false)\r\n    },\r\n\r\n    handleScroll (event) {\r\n      if (!this.$_scrollDirty) {\r\n        this.$_scrollDirty = true\r\n        requestAnimationFrame(() => {\r\n          this.$_scrollDirty = false\r\n          const { continuous } = this.updateVisibleItems(false, true)\r\n\r\n          // It seems sometimes chrome doesn't fire scroll event :/\r\n          // When non continous scrolling is ending, we force a refresh\r\n          if (!continuous) {\r\n            clearTimeout(this.$_refreshTimout)\r\n            this.$_refreshTimout = setTimeout(this.handleScroll, 100)\r\n          }\r\n        })\r\n      }\r\n    },\r\n\r\n    handleVisibilityChange (isVisible, entry) {\r\n      if (this.ready) {\r\n        if (isVisible || entry.boundingClientRect.width !== 0 || entry.boundingClientRect.height !== 0) {\r\n          this.$emit('visible')\r\n          requestAnimationFrame(() => {\r\n            this.updateVisibleItems(false)\r\n          })\r\n        } else {\r\n          this.$emit('hidden')\r\n        }\r\n      }\r\n    },\r\n\r\n    updateVisibleItems (checkItem, checkPositionDiff = false) {\r\n      const itemSize = this.itemSize\r\n      const gridItems = this.gridItems || 1\r\n      const itemSecondarySize = this.itemSecondarySize || itemSize\r\n      const minItemSize = this.$_computedMinItemSize\r\n      const typeField = this.typeField\r\n      const keyField = this.simpleArray ? null : this.keyField\r\n      const items = this.items\r\n      const count = items.length\r\n      const sizes = this.sizes\r\n      const views = this.$_views\r\n      const unusedViews = this.$_unusedViews\r\n      const pool = this.pool\r\n      let startIndex, endIndex\r\n      let totalSize\r\n      let visibleStartIndex, visibleEndIndex\r\n\r\n      if (!count) {\r\n        startIndex = endIndex = visibleStartIndex = visibleEndIndex = totalSize = 0\r\n      } else if (this.$_prerender) {\r\n        startIndex = visibleStartIndex = 0\r\n        endIndex = visibleEndIndex = Math.min(this.prerender, items.length)\r\n        totalSize = null\r\n      } else {\r\n        const scroll = this.getScroll()\r\n\r\n        // Skip update if use hasn't scrolled enough\r\n        if (checkPositionDiff) {\r\n          let positionDiff = scroll.start - this.$_lastUpdateScrollPosition\r\n          if (positionDiff < 0) positionDiff = -positionDiff\r\n          if ((itemSize === null && positionDiff < minItemSize) || positionDiff < itemSize) {\r\n            return {\r\n              continuous: true,\r\n            }\r\n          }\r\n        }\r\n        this.$_lastUpdateScrollPosition = scroll.start\r\n\r\n        const buffer = this.buffer\r\n        scroll.start -= buffer\r\n        scroll.end += buffer\r\n\r\n        // account for leading slot\r\n        let beforeSize = 0\r\n        if (this.$refs.before) {\r\n          beforeSize = this.$refs.before.scrollHeight\r\n          scroll.start -= beforeSize\r\n        }\r\n\r\n        // account for trailing slot\r\n        if (this.$refs.after) {\r\n          const afterSize = this.$refs.after.scrollHeight\r\n          scroll.end += afterSize\r\n        }\r\n\r\n        // Variable size mode\r\n        if (itemSize === null) {\r\n          let h\r\n          let a = 0\r\n          let b = count - 1\r\n          let i = ~~(count / 2)\r\n          let oldI\r\n\r\n          // Searching for startIndex\r\n          do {\r\n            oldI = i\r\n            h = sizes[i].accumulator\r\n            if (h < scroll.start) {\r\n              a = i\r\n            } else if (i < count - 1 && sizes[i + 1].accumulator > scroll.start) {\r\n              b = i\r\n            }\r\n            i = ~~((a + b) / 2)\r\n          } while (i !== oldI)\r\n          i < 0 && (i = 0)\r\n          startIndex = i\r\n\r\n          // For container style\r\n          totalSize = sizes[count - 1].accumulator\r\n\r\n          // Searching for endIndex\r\n          for (endIndex = i; endIndex < count && sizes[endIndex].accumulator < scroll.end; endIndex++);\r\n          if (endIndex === -1) {\r\n            endIndex = items.length - 1\r\n          } else {\r\n            endIndex++\r\n            // Bounds\r\n            endIndex > count && (endIndex = count)\r\n          }\r\n\r\n          // search visible startIndex\r\n          for (visibleStartIndex = startIndex; visibleStartIndex < count && (beforeSize + sizes[visibleStartIndex].accumulator) < scroll.start; visibleStartIndex++);\r\n\r\n          // search visible endIndex\r\n          for (visibleEndIndex = visibleStartIndex; visibleEndIndex < count && (beforeSize + sizes[visibleEndIndex].accumulator) < scroll.end; visibleEndIndex++);\r\n        } else {\r\n          // Fixed size mode\r\n          startIndex = ~~(scroll.start / itemSize * gridItems)\r\n          const remainer = startIndex % gridItems\r\n          startIndex -= remainer\r\n          endIndex = Math.ceil(scroll.end / itemSize * gridItems)\r\n          visibleStartIndex = Math.max(0, Math.floor((scroll.start - beforeSize) / itemSize * gridItems))\r\n          visibleEndIndex = Math.floor((scroll.end - beforeSize) / itemSize * gridItems)\r\n\r\n          // Bounds\r\n          startIndex < 0 && (startIndex = 0)\r\n          endIndex > count && (endIndex = count)\r\n          visibleStartIndex < 0 && (visibleStartIndex = 0)\r\n          visibleEndIndex > count && (visibleEndIndex = count)\r\n\r\n          totalSize = Math.ceil(count / gridItems) * itemSize\r\n        }\r\n      }\r\n\r\n      if (endIndex - startIndex > config.itemsLimit) {\r\n        this.itemsLimitError()\r\n      }\r\n\r\n      this.totalSize = totalSize\r\n\r\n      let view\r\n\r\n      const continuous = startIndex <= this.$_endIndex && endIndex >= this.$_startIndex\r\n\r\n      if (this.$_continuous !== continuous) {\r\n        if (continuous) {\r\n          views.clear()\r\n          unusedViews.clear()\r\n          for (let i = 0, l = pool.length; i < l; i++) {\r\n            view = pool[i]\r\n            this.unuseView(view)\r\n          }\r\n        }\r\n        this.$_continuous = continuous\r\n      } else if (continuous) {\r\n        for (let i = 0, l = pool.length; i < l; i++) {\r\n          view = pool[i]\r\n          if (view.nr.used) {\r\n            // Update view item index\r\n            if (checkItem) {\r\n              view.nr.index = items.indexOf(view.item)\r\n            }\r\n\r\n            // Check if index is still in visible range\r\n            if (\r\n              view.nr.index === -1 ||\r\n              view.nr.index < startIndex ||\r\n              view.nr.index >= endIndex\r\n            ) {\r\n              this.unuseView(view)\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      const unusedIndex = continuous ? null : new Map()\r\n\r\n      let item, type, unusedPool\r\n      let v\r\n      for (let i = startIndex; i < endIndex; i++) {\r\n        item = items[i]\r\n        const key = keyField ? item[keyField] : item\r\n        if (key == null) {\r\n          throw new Error(`Key is ${key} on item (keyField is '${keyField}')`)\r\n        }\r\n        view = views.get(key)\r\n\r\n        if (!itemSize && !sizes[i].size) {\r\n          if (view) this.unuseView(view)\r\n          continue\r\n        }\r\n\r\n        // No view assigned to item\r\n        if (!view) {\r\n          if (i === items.length - 1) this.$emit('scroll-end')\r\n          if (i === 0) this.$emit('scroll-start')\r\n\r\n          type = item[typeField]\r\n          unusedPool = unusedViews.get(type)\r\n\r\n          if (continuous) {\r\n            // Reuse existing view\r\n            if (unusedPool && unusedPool.length) {\r\n              view = unusedPool.pop()\r\n              view.item = item\r\n              view.nr.used = true\r\n              view.nr.index = i\r\n              view.nr.key = key\r\n              view.nr.type = type\r\n            } else {\r\n              view = this.addView(pool, i, item, key, type)\r\n            }\r\n          } else {\r\n            // Use existing view\r\n            // We don't care if they are already used\r\n            // because we are not in continous scrolling\r\n            v = unusedIndex.get(type) || 0\r\n\r\n            if (!unusedPool || v >= unusedPool.length) {\r\n              view = this.addView(pool, i, item, key, type)\r\n              this.unuseView(view, true)\r\n              unusedPool = unusedViews.get(type)\r\n            }\r\n\r\n            view = unusedPool[v]\r\n            view.item = item\r\n            view.nr.used = true\r\n            view.nr.index = i\r\n            view.nr.key = key\r\n            view.nr.type = type\r\n            unusedIndex.set(type, v + 1)\r\n            v++\r\n          }\r\n          views.set(key, view)\r\n        } else {\r\n          view.nr.used = true\r\n          view.item = item\r\n        }\r\n\r\n        // Update position\r\n        if (itemSize === null) {\r\n          view.position = sizes[i - 1].accumulator\r\n          view.offset = 0\r\n        } else {\r\n          view.position = Math.floor(i / gridItems) * itemSize\r\n          view.offset = (i % gridItems) * itemSecondarySize\r\n        }\r\n      }\r\n\r\n      this.$_startIndex = startIndex\r\n      this.$_endIndex = endIndex\r\n\r\n      if (this.emitUpdate) this.$emit('update', startIndex, endIndex, visibleStartIndex, visibleEndIndex)\r\n\r\n      // After the user has finished scrolling\r\n      // Sort views so text selection is correct\r\n      clearTimeout(this.$_sortTimer)\r\n      this.$_sortTimer = setTimeout(this.sortViews, 300)\r\n\r\n      return {\r\n        continuous,\r\n      }\r\n    },\r\n\r\n    getListenerTarget () {\r\n      let target = ScrollParent(this.$el)\r\n      // Fix global scroll target for Chrome and Safari\r\n      if (window.document && (target === window.document.documentElement || target === window.document.body)) {\r\n        target = window\r\n      }\r\n      return target\r\n    },\r\n\r\n    getScroll () {\r\n      const { $el: el, direction } = this\r\n      const isVertical = direction === 'vertical'\r\n      let scrollState\r\n\r\n      if (this.pageMode) {\r\n        const bounds = el.getBoundingClientRect()\r\n        const boundsSize = isVertical ? bounds.height : bounds.width\r\n        let start = -(isVertical ? bounds.top : bounds.left)\r\n        let size = isVertical ? window.innerHeight : window.innerWidth\r\n        if (start < 0) {\r\n          size += start\r\n          start = 0\r\n        }\r\n        if (start + size > boundsSize) {\r\n          size = boundsSize - start\r\n        }\r\n        scrollState = {\r\n          start,\r\n          end: start + size,\r\n        }\r\n      } else if (isVertical) {\r\n        scrollState = {\r\n          start: el.scrollTop,\r\n          end: el.scrollTop + el.clientHeight,\r\n        }\r\n      } else {\r\n        scrollState = {\r\n          start: el.scrollLeft,\r\n          end: el.scrollLeft + el.clientWidth,\r\n        }\r\n      }\r\n\r\n      return scrollState\r\n    },\r\n\r\n    applyPageMode () {\r\n      if (this.pageMode) {\r\n        this.addListeners()\r\n      } else {\r\n        this.removeListeners()\r\n      }\r\n    },\r\n\r\n    addListeners () {\r\n      this.listenerTarget = this.getListenerTarget()\r\n      this.listenerTarget.addEventListener('scroll', this.handleScroll, supportsPassive\r\n        ? {\r\n            passive: true,\r\n          }\r\n        : false)\r\n      this.listenerTarget.addEventListener('resize', this.handleResize)\r\n    },\r\n\r\n    removeListeners () {\r\n      if (!this.listenerTarget) {\r\n        return\r\n      }\r\n\r\n      this.listenerTarget.removeEventListener('scroll', this.handleScroll)\r\n      this.listenerTarget.removeEventListener('resize', this.handleResize)\r\n\r\n      this.listenerTarget = null\r\n    },\r\n\r\n    scrollToItem (index) {\r\n      let scroll\r\n      if (this.itemSize === null) {\r\n        scroll = index > 0 ? this.sizes[index - 1].accumulator : 0\r\n      } else {\r\n        scroll = Math.floor(index / this.gridItems) * this.itemSize\r\n      }\r\n      this.scrollToPosition(scroll)\r\n    },\r\n\r\n    scrollToPosition (position) {\r\n      const direction = this.direction === 'vertical'\r\n        ? { scroll: 'scrollTop', start: 'top' }\r\n        : { scroll: 'scrollLeft', start: 'left' }\r\n\r\n      let viewport\r\n      let scrollDirection\r\n      let scrollDistance\r\n\r\n      if (this.pageMode) {\r\n        const viewportEl = ScrollParent(this.$el)\r\n        // HTML doesn't overflow like other elements\r\n        const scrollTop = viewportEl.tagName === 'HTML' ? 0 : viewportEl[direction.scroll]\r\n        const bounds = viewportEl.getBoundingClientRect()\r\n\r\n        const scroller = this.$el.getBoundingClientRect()\r\n        const scrollerPosition = scroller[direction.start] - bounds[direction.start]\r\n\r\n        viewport = viewportEl\r\n        scrollDirection = direction.scroll\r\n        scrollDistance = position + scrollTop + scrollerPosition\r\n      } else {\r\n        viewport = this.$el\r\n        scrollDirection = direction.scroll\r\n        scrollDistance = position\r\n      }\r\n\r\n      viewport[scrollDirection] = scrollDistance\r\n    },\r\n\r\n    itemsLimitError () {\r\n      setTimeout(() => {\r\n        console.log('It seems the scroller element isn\\'t scrolling, so it tries to render all the items at once.', 'Scroller:', this.$el)\r\n        console.log('Make sure the scroller has a fixed height (or width) and \\'overflow-y\\' (or \\'overflow-x\\') set to \\'auto\\' so it can scroll correctly and only render the items visible in the scroll viewport.')\r\n      })\r\n      throw new Error('Rendered items limit reached')\r\n    },\r\n\r\n    sortViews () {\r\n      this.pool.sort((viewA, viewB) => viewA.nr.index - viewB.nr.index)\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n.vue-recycle-scroller {\r\n  position: relative;\r\n}\r\n\r\n.vue-recycle-scroller.direction-vertical:not(.page-mode) {\r\n  overflow-y: auto;\r\n}\r\n\r\n.vue-recycle-scroller.direction-horizontal:not(.page-mode) {\r\n  overflow-x: auto;\r\n}\r\n\r\n.vue-recycle-scroller.direction-horizontal {\r\n  display: flex;\r\n}\r\n\r\n.vue-recycle-scroller__slot {\r\n  flex: auto 0 0;\r\n}\r\n\r\n.vue-recycle-scroller__item-wrapper {\r\n  flex: 1;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.vue-recycle-scroller.ready .vue-recycle-scroller__item-view {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  will-change: transform;\r\n}\r\n\r\n.vue-recycle-scroller.direction-vertical .vue-recycle-scroller__item-wrapper {\r\n  width: 100%;\r\n}\r\n\r\n.vue-recycle-scroller.direction-horizontal .vue-recycle-scroller__item-wrapper {\r\n  height: 100%;\r\n}\r\n\r\n.vue-recycle-scroller.ready.direction-vertical .vue-recycle-scroller__item-view {\r\n  width: 100%;\r\n}\r\n\r\n.vue-recycle-scroller.ready.direction-horizontal .vue-recycle-scroller__item-view {\r\n  height: 100%;\r\n}\r\n</style>\r\n","<template>\r\n  <RecycleScroller\r\n    ref=\"scroller\"\r\n    :items=\"itemsWithSize\"\r\n    :min-item-size=\"minItemSize\"\r\n    :direction=\"direction\"\r\n    key-field=\"id\"\r\n    :list-tag=\"listTag\"\r\n    :item-tag=\"itemTag\"\r\n    v-bind=\"$attrs\"\r\n    @resize=\"onScrollerResize\"\r\n    @visible=\"onScrollerVisible\"\r\n    v-on=\"listeners\"\r\n  >\r\n    <template slot-scope=\"{ item: itemWithSize, index, active }\">\r\n      <slot\r\n        v-bind=\"{\r\n          item: itemWithSize.item,\r\n          index,\r\n          active,\r\n          itemWithSize\r\n        }\"\r\n      />\r\n    </template>\r\n    <template slot=\"before\">\r\n      <slot name=\"before\" />\r\n    </template>\r\n    <template slot=\"after\">\r\n      <slot name=\"after\" />\r\n    </template>\r\n    <template slot=\"empty\">\r\n      <slot name=\"empty\" />\r\n    </template>\r\n  </RecycleScroller>\r\n</template>\r\n\r\n<script>\r\nimport RecycleScroller from './RecycleScroller.vue'\r\nimport { props, simpleArray } from './common'\r\n\r\nexport default {\r\n  name: 'DynamicScroller',\r\n\r\n  components: {\r\n    RecycleScroller,\r\n  },\r\n\r\n  provide () {\r\n    if (typeof ResizeObserver !== 'undefined') {\r\n      this.$_resizeObserver = new ResizeObserver(entries => {\r\n        requestAnimationFrame(() => {\r\n          if (!Array.isArray(entries)) {\r\n            return\r\n          }\r\n          for (const entry of entries) {\r\n            if (entry.target) {\r\n              const event = new CustomEvent(\r\n                'resize',\r\n                {\r\n                  detail: {\r\n                    contentRect: entry.contentRect,\r\n                  },\r\n                },\r\n              )\r\n              entry.target.dispatchEvent(event)\r\n            }\r\n          }\r\n        })\r\n      })\r\n    }\r\n\r\n    return {\r\n      vscrollData: this.vscrollData,\r\n      vscrollParent: this,\r\n      vscrollResizeObserver: this.$_resizeObserver,\r\n    }\r\n  },\r\n\r\n  inheritAttrs: false,\r\n\r\n  props: {\r\n    ...props,\r\n\r\n    minItemSize: {\r\n      type: [Number, String],\r\n      required: true,\r\n    },\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      vscrollData: {\r\n        active: true,\r\n        sizes: {},\r\n        validSizes: {},\r\n        keyField: this.keyField,\r\n        simpleArray: false,\r\n      },\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    simpleArray,\r\n\r\n    itemsWithSize () {\r\n      const result = []\r\n      const { items, keyField, simpleArray } = this\r\n      const sizes = this.vscrollData.sizes\r\n      const l = items.length\r\n      for (let i = 0; i < l; i++) {\r\n        const item = items[i]\r\n        const id = simpleArray ? i : item[keyField]\r\n        let size = sizes[id]\r\n        if (typeof size === 'undefined' && !this.$_undefinedMap[id]) {\r\n          size = 0\r\n        }\r\n        result.push({\r\n          item,\r\n          id,\r\n          size,\r\n        })\r\n      }\r\n      return result\r\n    },\r\n\r\n    listeners () {\r\n      const listeners = {}\r\n      for (const key in this.$listeners) {\r\n        if (key !== 'resize' && key !== 'visible') {\r\n          listeners[key] = this.$listeners[key]\r\n        }\r\n      }\r\n      return listeners\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    items () {\r\n      this.forceUpdate(false)\r\n    },\r\n\r\n    simpleArray: {\r\n      handler (value) {\r\n        this.vscrollData.simpleArray = value\r\n      },\r\n      immediate: true,\r\n    },\r\n\r\n    direction (value) {\r\n      this.forceUpdate(true)\r\n    },\r\n\r\n    itemsWithSize (next, prev) {\r\n      const scrollTop = this.$el.scrollTop\r\n\r\n      // Calculate total diff between prev and next sizes\r\n      // over current scroll top. Then add it to scrollTop to\r\n      // avoid jumping the contents that the user is seeing.\r\n      let prevActiveTop = 0; let activeTop = 0\r\n      const length = Math.min(next.length, prev.length)\r\n      for (let i = 0; i < length; i++) {\r\n        if (prevActiveTop >= scrollTop) {\r\n          break\r\n        }\r\n        prevActiveTop += prev[i].size || this.minItemSize\r\n        activeTop += next[i].size || this.minItemSize\r\n      }\r\n      const offset = activeTop - prevActiveTop\r\n\r\n      if (offset === 0) {\r\n        return\r\n      }\r\n\r\n      this.$el.scrollTop += offset\r\n    },\r\n  },\r\n\r\n  beforeCreate () {\r\n    this.$_updates = []\r\n    this.$_undefinedSizes = 0\r\n    this.$_undefinedMap = {}\r\n  },\r\n\r\n  activated () {\r\n    this.vscrollData.active = true\r\n  },\r\n\r\n  deactivated () {\r\n    this.vscrollData.active = false\r\n  },\r\n\r\n  methods: {\r\n    onScrollerResize () {\r\n      const scroller = this.$refs.scroller\r\n      if (scroller) {\r\n        this.forceUpdate()\r\n      }\r\n      this.$emit('resize')\r\n    },\r\n\r\n    onScrollerVisible () {\r\n      this.$emit('vscroll:update', { force: false })\r\n      this.$emit('visible')\r\n    },\r\n\r\n    forceUpdate (clear = true) {\r\n      if (clear || this.simpleArray) {\r\n        this.vscrollData.validSizes = {}\r\n      }\r\n      this.$emit('vscroll:update', { force: true })\r\n    },\r\n\r\n    scrollToItem (index) {\r\n      const scroller = this.$refs.scroller\r\n      if (scroller) scroller.scrollToItem(index)\r\n    },\r\n\r\n    getItemSize (item, index = undefined) {\r\n      const id = this.simpleArray ? (index != null ? index : this.items.indexOf(item)) : item[this.keyField]\r\n      return this.vscrollData.sizes[id] || 0\r\n    },\r\n\r\n    scrollToBottom () {\r\n      if (this.$_scrollingToBottom) return\r\n      this.$_scrollingToBottom = true\r\n      const el = this.$el\r\n      // Item is inserted to the DOM\r\n      this.$nextTick(() => {\r\n        el.scrollTop = el.scrollHeight + 5000\r\n        // Item sizes are computed\r\n        const cb = () => {\r\n          el.scrollTop = el.scrollHeight + 5000\r\n          requestAnimationFrame(() => {\r\n            el.scrollTop = el.scrollHeight + 5000\r\n            if (this.$_undefinedSizes === 0) {\r\n              this.$_scrollingToBottom = false\r\n            } else {\r\n              requestAnimationFrame(cb)\r\n            }\r\n          })\r\n        }\r\n        requestAnimationFrame(cb)\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n","<script>\r\nexport default {\r\n  name: 'DynamicScrollerItem',\r\n\r\n  inject: [\r\n    'vscrollData',\r\n    'vscrollParent',\r\n    'vscrollResizeObserver',\r\n  ],\r\n\r\n  props: {\r\n    // eslint-disable-next-line vue/require-prop-types\r\n    item: {\r\n      required: true,\r\n    },\r\n\r\n    watchData: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Indicates if the view is actively used to display an item.\r\n     */\r\n    active: {\r\n      type: Boolean,\r\n      required: true,\r\n    },\r\n\r\n    index: {\r\n      type: Number,\r\n      default: undefined,\r\n    },\r\n\r\n    sizeDependencies: {\r\n      type: [Array, Object],\r\n      default: null,\r\n    },\r\n\r\n    emitResize: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    tag: {\r\n      type: String,\r\n      default: 'div',\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    id () {\r\n      if (this.vscrollData.simpleArray) return this.index\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (this.item.hasOwnProperty(this.vscrollData.keyField)) return this.item[this.vscrollData.keyField]\r\n      throw new Error(`keyField '${this.vscrollData.keyField}' not found in your item. You should set a valid keyField prop on your Scroller`)\r\n    },\r\n\r\n    size () {\r\n      return (this.vscrollData.validSizes[this.id] && this.vscrollData.sizes[this.id]) || 0\r\n    },\r\n\r\n    finalActive () {\r\n      return this.active && this.vscrollData.active\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    watchData: 'updateWatchData',\r\n\r\n    id () {\r\n      if (!this.size) {\r\n        this.onDataUpdate()\r\n      }\r\n    },\r\n\r\n    finalActive (value) {\r\n      if (!this.size) {\r\n        if (value) {\r\n          if (!this.vscrollParent.$_undefinedMap[this.id]) {\r\n            this.vscrollParent.$_undefinedSizes++\r\n            this.vscrollParent.$_undefinedMap[this.id] = true\r\n          }\r\n        } else {\r\n          if (this.vscrollParent.$_undefinedMap[this.id]) {\r\n            this.vscrollParent.$_undefinedSizes--\r\n            this.vscrollParent.$_undefinedMap[this.id] = false\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.vscrollResizeObserver) {\r\n        if (value) {\r\n          this.observeSize()\r\n        } else {\r\n          this.unobserveSize()\r\n        }\r\n      } else if (value && this.$_pendingVScrollUpdate === this.id) {\r\n        this.updateSize()\r\n      }\r\n    },\r\n  },\r\n\r\n  created () {\r\n    if (this.$isServer) return\r\n\r\n    this.$_forceNextVScrollUpdate = null\r\n    this.updateWatchData()\r\n\r\n    if (!this.vscrollResizeObserver) {\r\n      for (const k in this.sizeDependencies) {\r\n        this.$watch(() => this.sizeDependencies[k], this.onDataUpdate)\r\n      }\r\n\r\n      this.vscrollParent.$on('vscroll:update', this.onVscrollUpdate)\r\n      this.vscrollParent.$on('vscroll:update-size', this.onVscrollUpdateSize)\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    if (this.vscrollData.active) {\r\n      this.updateSize()\r\n      this.observeSize()\r\n    }\r\n  },\r\n\r\n  beforeDestroy () {\r\n    this.vscrollParent.$off('vscroll:update', this.onVscrollUpdate)\r\n    this.vscrollParent.$off('vscroll:update-size', this.onVscrollUpdateSize)\r\n    this.unobserveSize()\r\n  },\r\n\r\n  methods: {\r\n    updateSize () {\r\n      if (this.finalActive) {\r\n        if (this.$_pendingSizeUpdate !== this.id) {\r\n          this.$_pendingSizeUpdate = this.id\r\n          this.$_forceNextVScrollUpdate = null\r\n          this.$_pendingVScrollUpdate = null\r\n          this.computeSize(this.id)\r\n        }\r\n      } else {\r\n        this.$_forceNextVScrollUpdate = this.id\r\n      }\r\n    },\r\n\r\n    updateWatchData () {\r\n      if (this.watchData && !this.vscrollResizeObserver) {\r\n        this.$_watchData = this.$watch('item', () => {\r\n          this.onDataUpdate()\r\n        }, {\r\n          deep: true,\r\n        })\r\n      } else if (this.$_watchData) {\r\n        this.$_watchData()\r\n        this.$_watchData = null\r\n      }\r\n    },\r\n\r\n    onVscrollUpdate ({ force }) {\r\n      // If not active, sechedule a size update when it becomes active\r\n      if (!this.finalActive && force) {\r\n        this.$_pendingVScrollUpdate = this.id\r\n      }\r\n\r\n      if (this.$_forceNextVScrollUpdate === this.id || force || !this.size) {\r\n        this.updateSize()\r\n      }\r\n    },\r\n\r\n    onDataUpdate () {\r\n      this.updateSize()\r\n    },\r\n\r\n    computeSize (id) {\r\n      this.$nextTick(() => {\r\n        if (this.id === id) {\r\n          const width = this.$el.offsetWidth\r\n          const height = this.$el.offsetHeight\r\n          this.applySize(width, height)\r\n        }\r\n        this.$_pendingSizeUpdate = null\r\n      })\r\n    },\r\n\r\n    applySize (width, height) {\r\n      const size = ~~(this.vscrollParent.direction === 'vertical' ? height : width)\r\n      if (size && this.size !== size) {\r\n        if (this.vscrollParent.$_undefinedMap[this.id]) {\r\n          this.vscrollParent.$_undefinedSizes--\r\n          this.vscrollParent.$_undefinedMap[this.id] = undefined\r\n        }\r\n        this.$set(this.vscrollData.sizes, this.id, size)\r\n        this.$set(this.vscrollData.validSizes, this.id, true)\r\n        if (this.emitResize) this.$emit('resize', this.id)\r\n      }\r\n    },\r\n\r\n    observeSize () {\r\n      if (!this.vscrollResizeObserver || !this.$el.parentNode) return\r\n      this.vscrollResizeObserver.observe(this.$el.parentNode)\r\n      this.$el.parentNode.addEventListener('resize', this.onResize)\r\n    },\r\n\r\n    unobserveSize () {\r\n      if (!this.vscrollResizeObserver) return\r\n      this.vscrollResizeObserver.unobserve(this.$el.parentNode)\r\n      this.$el.parentNode.removeEventListener('resize', this.onResize)\r\n    },\r\n\r\n    onResize (event) {\r\n      const { width, height } = event.detail.contentRect\r\n      this.applySize(width, height)\r\n    },\r\n  },\r\n\r\n  render (h) {\r\n    return h(this.tag, this.$slots.default)\r\n  },\r\n}\r\n</script>\r\n","import config from './config'\r\n\r\nimport RecycleScroller from './components/RecycleScroller.vue'\r\nimport DynamicScroller from './components/DynamicScroller.vue'\r\nimport DynamicScrollerItem from './components/DynamicScrollerItem.vue'\r\n\r\nexport { default as IdState } from './mixins/IdState'\r\n\r\nexport {\r\n  RecycleScroller,\r\n  DynamicScroller,\r\n  DynamicScrollerItem,\r\n}\r\n\r\nfunction registerComponents (Vue, prefix) {\r\n  Vue.component(`${prefix}recycle-scroller`, RecycleScroller)\r\n  Vue.component(`${prefix}RecycleScroller`, RecycleScroller)\r\n  Vue.component(`${prefix}dynamic-scroller`, DynamicScroller)\r\n  Vue.component(`${prefix}DynamicScroller`, DynamicScroller)\r\n  Vue.component(`${prefix}dynamic-scroller-item`, DynamicScrollerItem)\r\n  Vue.component(`${prefix}DynamicScrollerItem`, DynamicScrollerItem)\r\n}\r\n\r\nconst plugin = {\r\n  // eslint-disable-next-line no-undef\r\n  version: VERSION,\r\n  install (Vue, options) {\r\n    const finalOptions = Object.assign({}, {\r\n      installComponents: true,\r\n      componentsPrefix: '',\r\n    }, options)\r\n\r\n    for (const key in finalOptions) {\r\n      if (typeof finalOptions[key] !== 'undefined') {\r\n        config[key] = finalOptions[key]\r\n      }\r\n    }\r\n\r\n    if (finalOptions.installComponents) {\r\n      registerComponents(Vue, finalOptions.componentsPrefix)\r\n    }\r\n  },\r\n}\r\n\r\nexport default plugin\r\n\r\n// Auto-install\r\nlet GlobalVue = null\r\nif (typeof window !== 'undefined') {\r\n  GlobalVue = window.Vue\r\n} else if (typeof global !== 'undefined') {\r\n  GlobalVue = global.Vue\r\n}\r\nif (GlobalVue) {\r\n  GlobalVue.use(plugin)\r\n}\r\n","import Vue from 'vue'\r\n\r\nexport default function ({\r\n  idProp = vm => vm.item.id,\r\n} = {}) {\r\n  const store = {}\r\n  const vm = new Vue({\r\n    data () {\r\n      return {\r\n        store,\r\n      }\r\n    },\r\n  })\r\n\r\n  // @vue/component\r\n  return {\r\n    data () {\r\n      return {\r\n        idState: null,\r\n      }\r\n    },\r\n\r\n    created () {\r\n      this.$_id = null\r\n      if (typeof idProp === 'function') {\r\n        this.$_getId = () => idProp.call(this, this)\r\n      } else {\r\n        this.$_getId = () => this[idProp]\r\n      }\r\n      this.$watch(this.$_getId, {\r\n        handler (value) {\r\n          this.$nextTick(() => {\r\n            this.$_id = value\r\n          })\r\n        },\r\n        immediate: true,\r\n      })\r\n      this.$_updateIdState()\r\n    },\r\n\r\n    beforeUpdate () {\r\n      this.$_updateIdState()\r\n    },\r\n\r\n    methods: {\r\n      /**\r\n       * Initialize an idState\r\n       * @param {number|string} id Unique id for the data\r\n       */\r\n      $_idStateInit (id) {\r\n        const factory = this.$options.idState\r\n        if (typeof factory === 'function') {\r\n          const data = factory.call(this, this)\r\n          vm.$set(store, id, data)\r\n          this.$_id = id\r\n          return data\r\n        } else {\r\n          throw new Error('[mixin IdState] Missing `idState` function on component definition.')\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Ensure idState is created and up-to-date\r\n       */\r\n      $_updateIdState () {\r\n        const id = this.$_getId()\r\n        if (id == null) {\r\n          console.warn(`No id found for IdState with idProp: '${idProp}'.`)\r\n        }\r\n        if (id !== this.$_id) {\r\n          if (!store[id]) {\r\n            this.$_idStateInit(id)\r\n          }\r\n          this.idState = store[id]\r\n        }\r\n      },\r\n    },\r\n  }\r\n}\r\n"],"names":["config","itemsLimit","root","factory","this","regex","parents","node","ps","parentNode","concat","style","prop","getComputedStyle","getPropertyValue","scroll","test","overflow","HTMLElement","SVGElement","i","length","document","scrollingElement","documentElement","module","exports","Scrollparent","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","VisibilityState","el","options","vnode","instance","Constructor","_classCallCheck","observer","frozen","createObserver","protoProps","staticProps","value","_this","destroyObserver","callback","result","entry","once","throttle","_leading","throttleOptions","leading","delay","timeout","lastState","currentArgs","arguments","undefined","throttled","state","_len","args","_key","apply","clearTimeout","setTimeout","_clear","oldResult","IntersectionObserver","entries","intersectingEntry","find","e","isIntersecting","intersectionRatio","threshold","intersection","context","$nextTick","observe","disconnect","get","bind","_ref2","console","warn","_vue_visibilityState","unbind","ObserveVisibility","update","_ref3","deepEqual","val1","val2","oldValue","plugin","version","install","Vue","directive","GlobalVue","window","global","use","isIE","initCompat","init","ua","navigator","userAgent","msie","indexOf","parseInt","substring","rv","edge","getInternetExplorerVersion","ResizeObserver","render","_h","$createElement","_self","_c","staticClass","attrs","tabindex","staticRenderFns","_scopeId","name","methods","compareAndNotify","_w","$el","offsetWidth","offsetHeight","$emit","addResizeHandlers","_resizeObject","contentDocument","defaultView","addEventListener","removeResizeHandlers","onload","removeEventListener","mounted","object","createElement","setAttribute","type","appendChild","data","beforeDestroy","component","supportsPassive","opts","items","required","keyField","String","default","direction","validator","includes","listTag","itemTag","simpleArray","uid","__vue_script__","components","directives","disableTransform","Boolean","itemSize","Number","gridItems","itemSecondarySize","minItemSize","sizeField","typeField","buffer","pageMode","prerender","emitUpdate","skipHover","listClass","itemClass","pool","totalSize","ready","hoverKey","computed","sizes","-1","accumulator","field","current","computedMinSize","l","size","$_computedMinItemSize","watch","updateVisibleItems","applyPageMode","handler","deep","created","$_startIndex","$_endIndex","$_views","Map","$_unusedViews","$_scrollDirty","$_lastUpdateScrollPosition","$_prerender","error","activated","lastPosition","scrollToPosition","removeListeners","addView","index","item","view","position","nonReactive","id","used","push","unuseView","fake","unusedViews","nr","unusedPool","set","delete","handleResize","handleScroll","event","requestAnimationFrame","continuous","$_refreshTimout","handleVisibilityChange","isVisible","boundingClientRect","width","height","checkItem","checkPositionDiff","count","views","startIndex","endIndex","visibleStartIndex","visibleEndIndex","Math","min","getScroll","positionDiff","start","end","beforeSize","$refs","before","scrollHeight","after","afterSize","h","oldI","a","b","ceil","max","floor","itemsLimitError","$_continuous","clear","unusedIndex","v","Error","pop","offset","$_sortTimer","sortViews","getListenerTarget","ScrollParent","body","isVertical","scrollState","bounds","getBoundingClientRect","boundsSize","top","left","innerHeight","innerWidth","scrollTop","clientHeight","scrollLeft","clientWidth","addListeners","listenerTarget","passive","scrollToItem","viewport","scrollDirection","scrollDistance","viewportEl","tagName","scrollerPosition","log","sort","viewA","viewB","RecycleScroller","provide","$_resizeObserver","CustomEvent","detail","contentRect","dispatchEvent","vscrollData","vscrollParent","vscrollResizeObserver","inheritAttrs","active","validSizes","itemsWithSize","$_undefinedMap","listeners","$listeners","forceUpdate","immediate","next","prev","prevActiveTop","activeTop","beforeCreate","$_updates","$_undefinedSizes","deactivated","onScrollerResize","scroller","onScrollerVisible","force","getItemSize","scrollToBottom","$_scrollingToBottom","cb","inject","watchData","sizeDependencies","emitResize","tag","hasOwnProperty","finalActive","onDataUpdate","observeSize","unobserveSize","$_pendingVScrollUpdate","updateSize","$isServer","$_forceNextVScrollUpdate","updateWatchData","k","$watch","$on","onVscrollUpdate","onVscrollUpdateSize","$off","$_pendingSizeUpdate","computeSize","$_watchData","applySize","$set","onResize","unobserve","$slots","VERSION","finalOptions","assign","installComponents","componentsPrefix","prefix","DynamicScroller","DynamicScrollerItem","registerComponents","idProp","vm","store","idState","$_id","$_getId","$_updateIdState","beforeUpdate","$_idStateInit","$options"],"mappings":"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"}